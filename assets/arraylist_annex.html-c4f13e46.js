import{_ as p}from"./Collections_class_diagram-3137e6d8.js";import{_ as t,r as a,o as r,c,d as n,e as A,a as s,b as o,f as y}from"./app-92b2a0d8.js";const i={},B=s("h1",{id:"_3-6-anexo-ii-arraylist-hoja-de-referencia-de-los-alumnos",tabindex:"-1"},"3.6 Anexo II - ArrayList hoja de referencia de los alumnos",-1),d=s("div",{class:"custom-container info"},[s("p",{class:"custom-container-title"},"Autoría"),s("p",null,[o("Esto es un extracto del trabajo "),s("em",null,"Reto I (Challenge I)"),o(" realizado por mis alumnos como parte del módulo de PSP. He tomado partes de los diferentes trabajos entregados para complementar la información a la que podréis acceder durante los exámenes.")]),s("p",null,"Gracias a todos.")],-1),D=s("p",null,"Para los ejemplos vamos a trabajar con la siguiente clase",-1),E=s("p",null,[s("img",{src:p,alt:"Diagrama de clases"})],-1),u=y(`<div class="pagebreak"></div><h2 id="a-definicion-y-creacion" tabindex="-1">A. Definición y creación</h2><p>Una colección representa un grupo de objetos. Esto objetos son conocidos como elementos. Cuando queremos trabajar con un conjunto de elementos, necesitamos un almacén donde poder guardarlos. En Java, se emplea la interfaz genérica <code>Collection</code> para este propósito. Gracias a esta interfaz, podemos almacenar cualquier tipo de objeto y podemos usar una serie de métodos comunes, como pueden ser: añadir, eliminar, obtener el tamaño de la colección.</p><p>Partiendo de la interfaz genérica Collection extienden otra serie de interfaces genéricas. Estas subinterfaces aportan distintas funcionalidades sobre la interfaz anterior.</p><p>La clase ArrayList en Java permite almacenar datos en memoria de forma similar a los Arrays con la ventaja de que el numero de elementos que almacena lo hace de forma dinámica, es decir, que no es necesario declarar su tamaño como pasa con los Arrays. Los elementos pueden añadirse o eliminarse según necesidad.</p><h3 id="a-1-constructores-de-arraylist" tabindex="-1">A.1. Constructores de ArrayList</h3><p>ArrayList proporciona 3 constructores que definen la capacidad inicial de la colección o si la inicializamos a partir de los valores de otra colección.</p><div class="language-java" data-ext="java"><pre class="shiki material-theme-lighter" style="background-color:#FAFAFA;" tabindex="0"><code><span class="line"><span style="color:#90A4AE;font-style:italic;">// Crea una instancia de ArrayList vacía.</span></span>
<span class="line"><span style="color:#9C3EDA;">ArrayList</span><span style="color:#39ADB5;">&lt;</span><span style="color:#9C3EDA;">Persona</span><span style="color:#39ADB5;">&gt;</span><span style="color:#90A4AE;"> listaPersonas </span><span style="color:#39ADB5;">=</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;font-style:italic;">new</span><span style="color:#90A4AE;"> </span><span style="color:#9C3EDA;">ArrayList</span><span style="color:#39ADB5;">&lt;&gt;();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#90A4AE;font-style:italic;">// ArrayList(int initialCapacity). Crea una instancia de ArrayList con una capacidad inicial especificada. </span></span>
<span class="line"><span style="color:#9C3EDA;">ArrayList</span><span style="color:#39ADB5;">&lt;</span><span style="color:#9C3EDA;">Persona</span><span style="color:#39ADB5;">&gt;</span><span style="color:#90A4AE;"> listaPersonas </span><span style="color:#39ADB5;">=</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;font-style:italic;">new</span><span style="color:#90A4AE;"> </span><span style="color:#9C3EDA;">ArrayList</span><span style="color:#39ADB5;">&lt;&gt;(</span><span style="color:#F76D47;">10</span><span style="color:#39ADB5;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#90A4AE;font-style:italic;">// ArrayList(Collection c). Crea una instancia de ArrayList a partir de otra colección de datos. Los datos se añaden en el orden en el que el Iterator de la otra colección los recorra.</span></span>
<span class="line"><span style="color:#9C3EDA;">ArrayList</span><span style="color:#39ADB5;">&lt;</span><span style="color:#9C3EDA;">Persona</span><span style="color:#39ADB5;">&gt;</span><span style="color:#90A4AE;"> listaPersonas </span><span style="color:#39ADB5;">=</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;font-style:italic;">new</span><span style="color:#90A4AE;"> </span><span style="color:#9C3EDA;">ArrayList</span><span style="color:#39ADB5;">&lt;&gt;(</span><span style="color:#90A4AE;">c</span><span style="color:#39ADB5;">);</span></span>
<span class="line"></span></code></pre></div><div class="pagebreak"></div><h2 id="b-metodos-y-propiedades-generales" tabindex="-1">B. Métodos y propiedades generales</h2><p>Partiendo de una serie de objetos, vamos a ver el resultado que obtendríamos con la ejecución de estos métodos</p><div class="language-java" data-ext="java"><pre class="shiki material-theme-lighter" style="background-color:#FAFAFA;" tabindex="0"><code><span class="line"><span style="color:#90A4AE;">  </span><span style="color:#9C3EDA;">Persona</span><span style="color:#90A4AE;"> p1 </span><span style="color:#39ADB5;">=</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;font-style:italic;">new</span><span style="color:#90A4AE;"> </span><span style="color:#6182B8;">Persona</span><span style="color:#39ADB5;">(</span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">Manuel</span><span style="color:#39ADB5;">&quot;</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">García</span><span style="color:#39ADB5;">&quot;</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#F76D47;">44</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#F76D47;">1.74d</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#F76D47;">80</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">Hombre</span><span style="color:#39ADB5;">&quot;</span><span style="color:#39ADB5;">);</span></span>
<span class="line"><span style="color:#90A4AE;">  </span><span style="color:#9C3EDA;">Persona</span><span style="color:#90A4AE;"> p2 </span><span style="color:#39ADB5;">=</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;font-style:italic;">new</span><span style="color:#90A4AE;"> </span><span style="color:#6182B8;">Persona</span><span style="color:#39ADB5;">(</span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">Juan</span><span style="color:#39ADB5;">&quot;</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">Martínez</span><span style="color:#39ADB5;">&quot;</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#F76D47;">65</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#F76D47;">1.84d</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#F76D47;">82</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">Hombre</span><span style="color:#39ADB5;">&quot;</span><span style="color:#39ADB5;">);</span></span>
<span class="line"><span style="color:#90A4AE;">  </span><span style="color:#9C3EDA;">Persona</span><span style="color:#90A4AE;"> p3 </span><span style="color:#39ADB5;">=</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;font-style:italic;">new</span><span style="color:#90A4AE;"> </span><span style="color:#6182B8;">Persona</span><span style="color:#39ADB5;">(</span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">Nombre3</span><span style="color:#39ADB5;">&quot;</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">Apellido3</span><span style="color:#39ADB5;">&quot;</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#F76D47;">52</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#F76D47;">1.70d</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#F76D47;">66</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">Hombre</span><span style="color:#39ADB5;">&quot;</span><span style="color:#39ADB5;">);</span></span>
<span class="line"><span style="color:#90A4AE;">  </span><span style="color:#9C3EDA;">Persona</span><span style="color:#90A4AE;"> p4 </span><span style="color:#39ADB5;">=</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;font-style:italic;">new</span><span style="color:#90A4AE;"> </span><span style="color:#6182B8;">Persona</span><span style="color:#39ADB5;">(</span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">Nombre4</span><span style="color:#39ADB5;">&quot;</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">Apellido4</span><span style="color:#39ADB5;">&quot;</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#F76D47;">23</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#F76D47;">1.96d</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#F76D47;">98</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">Mujer</span><span style="color:#39ADB5;">&quot;</span><span style="color:#39ADB5;">);</span></span>
<span class="line"></span></code></pre></div><h3 id="b-1-creacion-de-un-arraylist" tabindex="-1">B.1. Creación de un ArrayList</h3><div class="language-java" data-ext="java"><pre class="shiki material-theme-lighter" style="background-color:#FAFAFA;" tabindex="0"><code><span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// Crear un ArrayList de Personas</span></span>
<span class="line"><span style="color:#90A4AE;">  </span><span style="color:#9C3EDA;">ArrayList</span><span style="color:#39ADB5;">&lt;</span><span style="color:#9C3EDA;">Persona</span><span style="color:#39ADB5;">&gt;</span><span style="color:#90A4AE;"> listaPersonas </span><span style="color:#39ADB5;">=</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;font-style:italic;">new</span><span style="color:#90A4AE;"> </span><span style="color:#9C3EDA;">ArrayList</span><span style="color:#39ADB5;">&lt;&gt;();</span></span>
<span class="line"></span></code></pre></div><h3 id="b-2-anadir-y-eliminar-elementos" tabindex="-1">B.2. Añadir y eliminar elementos</h3><div class="language-java" data-ext="java"><pre class="shiki material-theme-lighter" style="background-color:#FAFAFA;" tabindex="0"><code><span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// Añadir un objeto Persona al final del ArrayList</span></span>
<span class="line"><span style="color:#90A4AE;">  listaPersonas</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">add</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">p1</span><span style="color:#39ADB5;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// Añade el elemento al ArrayList en la posición &#39;n+1&#39;. </span></span>
<span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// Cuidado, no podemos insertar en posiciones que no existen.</span></span>
<span class="line"><span style="color:#90A4AE;">  listaPersonas</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">add</span><span style="color:#39ADB5;">(</span><span style="color:#F76D47;">1</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> p1</span><span style="color:#39ADB5;">);</span></span>
<span class="line"><span style="color:#90A4AE;">  </span></span>
<span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// Borra el elemento de la posición &#39;n+1&#39; del ArrayList   </span></span>
<span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// Cuidado, no podemos eliminar de posiciones que no existen.</span></span>
<span class="line"><span style="color:#90A4AE;">  listaPersonas</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">remove</span><span style="color:#39ADB5;">(</span><span style="color:#F76D47;">2</span><span style="color:#39ADB5;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// Borra el primer objeto pasado encontrado en el ArrayList que se le pasa como parámetro.  </span></span>
<span class="line"><span style="color:#90A4AE;">  listaPersonas</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">remove</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">p1</span><span style="color:#39ADB5;">);</span><span style="color:#90A4AE;">  </span></span>
<span class="line"></span></code></pre></div><div class="custom-container info"><p class="custom-container-title">Duplicados</p><p>Si ya existe un elemento en el ArrayList, esta colección no controla la existencia de duplicados, por lo que tendremos el mismo objeto en dos posiciones diferentes. Podemos evitarlo comprobando previamente si ya existe ese objeto, como veremos a continuación.</p></div><h3 id="b-3-comprobar-si-un-elemento-ya-existe" tabindex="-1">B.3. Comprobar si un elemento ya existe</h3><div class="language-java" data-ext="java"><pre class="shiki material-theme-lighter" style="background-color:#FAFAFA;" tabindex="0"><code><span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// Comprueba si existe del objeto que se le pasa como parámetro</span></span>
<span class="line"><span style="color:#90A4AE;">  listaPersonas</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">contains</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">p4</span><span style="color:#39ADB5;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// Devuelve la posición del primer objeto pasado encontrado en el ArrayList  </span></span>
<span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// Si no lo encuentra, devuelve -1</span></span>
<span class="line"><span style="color:#90A4AE;">  listaPersonas</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">indexOf</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">p1</span><span style="color:#39ADB5;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// Devuelve la posición del último objeto pasado en el ArrayList   </span></span>
<span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// Si no lo encuentra, devuelve -1</span></span>
<span class="line"><span style="color:#90A4AE;">  listaPersonas</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">lastIndexOf</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">p1</span><span style="color:#39ADB5;">);</span></span>
<span class="line"></span></code></pre></div><h3 id="b-4-acceder-a-un-elemento-del-arraylist" tabindex="-1">B.4. Acceder a un elemento del ArrayList</h3><div class="language-java" data-ext="java"><pre class="shiki material-theme-lighter" style="background-color:#FAFAFA;" tabindex="0"><code><span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// Devuelve el elemento que esta en la posición &#39;n+1&#39; del ArrayList</span></span>
<span class="line"><span style="color:#90A4AE;">  listaPersonas</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">get</span><span style="color:#39ADB5;">(</span><span style="color:#F76D47;">2</span><span style="color:#39ADB5;">);</span></span>
<span class="line"></span></code></pre></div><h3 id="b-5-otras-funciones-de-utilidad" tabindex="-1">B.5. Otras funciones de utilidad</h3><div class="language-java" data-ext="java"><pre class="shiki material-theme-lighter" style="background-color:#FAFAFA;" tabindex="0"><code><span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// Devuelve el numero de elementos del ArrayList</span></span>
<span class="line"><span style="color:#90A4AE;">  listaPersonas</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">size</span><span style="color:#39ADB5;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">//Borra todos los elementos de ArrayList   </span></span>
<span class="line"><span style="color:#90A4AE;">  listaPersonas</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">clear</span><span style="color:#39ADB5;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// Devuelve true si el ArrayList esta vacío. Sino Devuelve false   </span></span>
<span class="line"><span style="color:#90A4AE;">  listaPersonas</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">isEmpty</span><span style="color:#39ADB5;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// Pasa el ArrayList a un Array </span></span>
<span class="line"><span style="color:#90A4AE;">  </span><span style="color:#9C3EDA;">Object</span><span style="color:#39ADB5;">[]</span><span style="color:#90A4AE;"> array </span><span style="color:#39ADB5;">=</span><span style="color:#90A4AE;"> listaPersonas</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">toArray</span><span style="color:#39ADB5;">();</span></span>
<span class="line"></span></code></pre></div><div class="pagebreak"></div><h2 id="c-anadir-datos-a-un-arraylist" tabindex="-1">C. Añadir datos a un ArrayList</h2><div class="custom-container info"><p class="custom-container-title">Orden de los elementos en un ArrayList</p><p>Cuando añadimos elementos a un ArrayList, el orden de inserción se conserva.</p><p>Una Lista, por definición, siempre mantiene el orden de los elementos. Esto no es solo para ArrayList, sino para todo tipo de listas como LinkedList, Vector, y el resto de clases que implementan el interfaz <code>java.util.List</code> .</p></div><h3 id="c-1-anadir-elementos-desde-el-constructor" tabindex="-1">C.1. Añadir elementos desde el constructor</h3><p>A la hora de crear el ArrayList, podemos añadirle datos, usando la sintaxis del doble corchete o bien con la construcción List.of o Arrays.asList</p><div class="language-java" data-ext="java"><pre class="shiki material-theme-lighter" style="background-color:#FAFAFA;" tabindex="0"><code><span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// Crea una nueva lista y a la vez la inicializa con valores  </span></span>
<span class="line"><span style="color:#90A4AE;">  </span><span style="color:#9C3EDA;">ArrayList</span><span style="color:#39ADB5;">&lt;</span><span style="color:#9C3EDA;">Persona</span><span style="color:#39ADB5;">&gt;</span><span style="color:#90A4AE;"> lista1 </span><span style="color:#39ADB5;">=</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;font-style:italic;">new</span><span style="color:#90A4AE;"> </span><span style="color:#9C3EDA;">ArrayList</span><span style="color:#39ADB5;">&lt;&gt;()</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">{{</span></span>
<span class="line"><span style="color:#90A4AE;">      </span><span style="color:#6182B8;">add</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">p1</span><span style="color:#39ADB5;">);</span></span>
<span class="line"><span style="color:#90A4AE;">      </span><span style="color:#6182B8;">add</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">p2</span><span style="color:#39ADB5;">);</span></span>
<span class="line"><span style="color:#90A4AE;">  </span><span style="color:#39ADB5;">}};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// En este caso indicamos los valores como si de parámetros se tratase</span></span>
<span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// De esta forma podemos añadir hasta un máximo de 10 elementos</span></span>
<span class="line"><span style="color:#90A4AE;">  </span><span style="color:#9C3EDA;">ArrayList</span><span style="color:#39ADB5;">&lt;</span><span style="color:#9C3EDA;">Persona</span><span style="color:#39ADB5;">&gt;</span><span style="color:#90A4AE;"> lista2 </span><span style="color:#39ADB5;">=</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;font-style:italic;">new</span><span style="color:#90A4AE;"> </span><span style="color:#9C3EDA;">ArrayList</span><span style="color:#39ADB5;">&lt;&gt;(</span></span>
<span class="line"><span style="color:#90A4AE;">        List</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">of</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">p1</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> p2</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> p3</span><span style="color:#39ADB5;">)</span></span>
<span class="line"><span style="color:#90A4AE;">  </span><span style="color:#39ADB5;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// De forma similar al caso anterior, con una construcción a partir de un Array</span></span>
<span class="line"><span style="color:#90A4AE;">  </span><span style="color:#9C3EDA;">ArrayList</span><span style="color:#39ADB5;">&lt;</span><span style="color:#9C3EDA;">Persona</span><span style="color:#39ADB5;">&gt;</span><span style="color:#90A4AE;"> lista3 </span><span style="color:#39ADB5;">=</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;font-style:italic;">new</span><span style="color:#90A4AE;"> </span><span style="color:#9C3EDA;">ArrayList</span><span style="color:#39ADB5;">&lt;&gt;(</span></span>
<span class="line"><span style="color:#90A4AE;">        Arrays</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">asList</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">p1</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> p2</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> p3</span><span style="color:#39ADB5;">)</span></span>
<span class="line"><span style="color:#90A4AE;">  </span><span style="color:#39ADB5;">);</span><span style="color:#90A4AE;">       </span></span>
<span class="line"></span></code></pre></div><h3 id="c-2-anadir-elementos-desde-otras-colecciones" tabindex="-1">C.2. Añadir elementos desde otras colecciones</h3><p>Podemos inicializar un ArrayList, como hemos visto en los ejemplos anteriores, desde varios tipos de colecciones (listas) que poseen características similares.</p><div class="language-java" data-ext="java"><pre class="shiki material-theme-lighter" style="background-color:#FAFAFA;" tabindex="0"><code><span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// Partiendo del código anterior, creamos un nuevo ArrayList a partir de lista2</span></span>
<span class="line"><span style="color:#90A4AE;">  </span><span style="color:#9C3EDA;">ArrayList</span><span style="color:#39ADB5;">&lt;</span><span style="color:#9C3EDA;">Persona</span><span style="color:#39ADB5;">&gt;</span><span style="color:#90A4AE;"> lista4 </span><span style="color:#39ADB5;">=</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;font-style:italic;">new</span><span style="color:#90A4AE;"> </span><span style="color:#9C3EDA;">ArrayList</span><span style="color:#39ADB5;">&lt;&gt;(</span><span style="color:#90A4AE;">lista3</span><span style="color:#39ADB5;">);</span><span style="color:#90A4AE;">  </span></span>
<span class="line"><span style="color:#90A4AE;">  </span></span>
<span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// Añade todos los elementos de la lista que indiquemos como argumento al final del ArrayList</span></span>
<span class="line"><span style="color:#90A4AE;">  lista4</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">addAll</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">lista3</span><span style="color:#39ADB5;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// Hace lo mismo, pero lo inserta en la posición indicada (debe existir al menos la posición anterior)  </span></span>
<span class="line"><span style="color:#90A4AE;">  lista4</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">addAll</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">lista3</span><span style="color:#39ADB5;">,</span><span style="color:#F76D47;">2</span><span style="color:#39ADB5;">);</span></span>
<span class="line"></span></code></pre></div><h3 id="c-3-anadir-eliminar-elementos-desde-codigo" tabindex="-1">C.3. Añadir / eliminar elementos desde código</h3><div class="language-java" data-ext="java"><pre class="shiki material-theme-lighter" style="background-color:#FAFAFA;" tabindex="0"><code><span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// Añadir un elemento al final de la lista</span></span>
<span class="line"><span style="color:#90A4AE;">  lista4</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">add</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">p4</span><span style="color:#39ADB5;">);</span></span>
<span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// Añade un elemento en la posición indicada. El elemento que ocupaba esa posición y todos los que había detrás, se mueven una posición a la derecha.</span></span>
<span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// En el ejemplo, inserta p1 al principio de la lista.</span></span>
<span class="line"><span style="color:#90A4AE;">  lista4</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">add</span><span style="color:#39ADB5;">(</span><span style="color:#F76D47;">0</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;">p1</span><span style="color:#39ADB5;">);</span><span style="color:#90A4AE;">   </span><span style="color:#90A4AE;font-style:italic;">// Inserta p1 al principio de la lista.</span></span>
<span class="line"><span style="color:#90A4AE;">  </span></span>
<span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// Eliminar un elemento. Si existe lo elimina y devuelve true, si no devuelve false</span></span>
<span class="line"><span style="color:#90A4AE;">  </span><span style="color:#9C3EDA;">boolean</span><span style="color:#90A4AE;"> existe </span><span style="color:#39ADB5;">=</span><span style="color:#90A4AE;"> lista4</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">remove</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">p1</span><span style="color:#39ADB5;">);</span><span style="color:#90A4AE;">  </span></span>
<span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// Eliminar un elemento por índice. Si la clave existe devuelve el valor asociado, si no devuelve null</span></span>
<span class="line"><span style="color:#90A4AE;">  </span><span style="color:#9C3EDA;">Persona</span><span style="color:#90A4AE;"> eliminada </span><span style="color:#39ADB5;">=</span><span style="color:#90A4AE;"> lista4</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">remove</span><span style="color:#39ADB5;">(</span><span style="color:#F76D47;">2</span><span style="color:#39ADB5;">);</span><span style="color:#90A4AE;">  </span></span>
<span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// Elimina del ArrayList todos aquellos elementos que coinciden con los indicados en la lista que pasamos como argumento </span></span>
<span class="line"><span style="color:#90A4AE;">  lista4</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">removeAll</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">lista3</span><span style="color:#39ADB5;">);</span></span>
<span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// Elimina del ArrayList todos aquellos elementos que cumplen con el predicado (la condición) descrita como argumento en el método e indicada como expresión lambda</span></span>
<span class="line"><span style="color:#90A4AE;">  lista4</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">removeIf</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">p</span><span style="color:#9C3EDA;">-&gt;</span><span style="color:#90A4AE;">p</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">getEdad</span><span style="color:#39ADB5;">()&lt;</span><span style="color:#F76D47;">18</span><span style="color:#39ADB5;">);</span><span style="color:#90A4AE;">   </span><span style="color:#90A4AE;font-style:italic;">// Elimina los menores de 18</span></span>
<span class="line"></span></code></pre></div><div class="pagebreak"></div><h2 id="d-recorrer-la-coleccion" tabindex="-1">D. Recorrer la colección</h2><p>Vamos a preparar un ArrayList para recorrerlo y usarlo en los siguientes apartados</p><div class="language-java" data-ext="java"><pre class="shiki material-theme-lighter" style="background-color:#FAFAFA;" tabindex="0"><code><span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// ArrayList creation</span></span>
<span class="line"><span style="color:#90A4AE;">  </span><span style="color:#9C3EDA;">ArrayList</span><span style="color:#39ADB5;">&lt;</span><span style="color:#9C3EDA;">Persona</span><span style="color:#39ADB5;">&gt;</span><span style="color:#90A4AE;"> grupoPersonas </span><span style="color:#39ADB5;">=</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;font-style:italic;">new</span><span style="color:#90A4AE;"> </span><span style="color:#9C3EDA;">ArrayList</span><span style="color:#39ADB5;">&lt;&gt;()</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">{{</span></span>
<span class="line"><span style="color:#90A4AE;">    </span><span style="color:#6182B8;">add</span><span style="color:#39ADB5;">(</span><span style="color:#39ADB5;font-style:italic;">new</span><span style="color:#90A4AE;"> </span><span style="color:#6182B8;">Persona</span><span style="color:#39ADB5;">(</span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">Nombre1</span><span style="color:#39ADB5;">&quot;</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">Apellido1</span><span style="color:#39ADB5;">&quot;</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#F76D47;">35</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#F76D47;">1.66d</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#F76D47;">71</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">Mujer</span><span style="color:#39ADB5;">&quot;</span><span style="color:#39ADB5;">));</span></span>
<span class="line"><span style="color:#90A4AE;">    </span><span style="color:#6182B8;">add</span><span style="color:#39ADB5;">(</span><span style="color:#39ADB5;font-style:italic;">new</span><span style="color:#90A4AE;"> </span><span style="color:#6182B8;">Persona</span><span style="color:#39ADB5;">(</span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">Nombre2</span><span style="color:#39ADB5;">&quot;</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">Apellido2</span><span style="color:#39ADB5;">&quot;</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#F76D47;">40</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#F76D47;">1.84d</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#F76D47;">88</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">Mujer</span><span style="color:#39ADB5;">&quot;</span><span style="color:#39ADB5;">));</span></span>
<span class="line"><span style="color:#90A4AE;">    </span><span style="color:#6182B8;">add</span><span style="color:#39ADB5;">(</span><span style="color:#39ADB5;font-style:italic;">new</span><span style="color:#90A4AE;"> </span><span style="color:#6182B8;">Persona</span><span style="color:#39ADB5;">(</span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">Nombre3</span><span style="color:#39ADB5;">&quot;</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">Apellido3</span><span style="color:#39ADB5;">&quot;</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#F76D47;">52</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#F76D47;">1.70d</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#F76D47;">66</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">Hombre</span><span style="color:#39ADB5;">&quot;</span><span style="color:#39ADB5;">));</span></span>
<span class="line"><span style="color:#90A4AE;">    </span><span style="color:#6182B8;">add</span><span style="color:#39ADB5;">(</span><span style="color:#39ADB5;font-style:italic;">new</span><span style="color:#90A4AE;"> </span><span style="color:#6182B8;">Persona</span><span style="color:#39ADB5;">(</span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">Nombre4</span><span style="color:#39ADB5;">&quot;</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">Apellido4</span><span style="color:#39ADB5;">&quot;</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#F76D47;">23</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#F76D47;">1.96d</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#F76D47;">98</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">Mujer</span><span style="color:#39ADB5;">&quot;</span><span style="color:#39ADB5;">));</span></span>
<span class="line"><span style="color:#90A4AE;">    </span><span style="color:#6182B8;">add</span><span style="color:#39ADB5;">(</span><span style="color:#39ADB5;font-style:italic;">new</span><span style="color:#90A4AE;"> </span><span style="color:#6182B8;">Persona</span><span style="color:#39ADB5;">(</span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">Nombre5</span><span style="color:#39ADB5;">&quot;</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">Apellido5</span><span style="color:#39ADB5;">&quot;</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#F76D47;">16</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#F76D47;">1.55d</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#F76D47;">60</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">Hombre</span><span style="color:#39ADB5;">&quot;</span><span style="color:#39ADB5;">));</span></span>
<span class="line"><span style="color:#90A4AE;">    </span><span style="color:#6182B8;">add</span><span style="color:#39ADB5;">(</span><span style="color:#39ADB5;font-style:italic;">new</span><span style="color:#90A4AE;"> </span><span style="color:#6182B8;">Persona</span><span style="color:#39ADB5;">(</span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">Nombre6</span><span style="color:#39ADB5;">&quot;</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">Apellido6</span><span style="color:#39ADB5;">&quot;</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#F76D47;">20</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#F76D47;">1.75d</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#F76D47;">74</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">Hombre</span><span style="color:#39ADB5;">&quot;</span><span style="color:#39ADB5;">));</span></span>
<span class="line"><span style="color:#90A4AE;">  </span><span style="color:#39ADB5;">}};</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><h3 id="d-1-usando-un-bucle-for" tabindex="-1">D.1. Usando un bucle for</h3><p>Con el bucle for iteramos de forma natural accediendo a los elementos por índice</p><div class="language-java" data-ext="java"><pre class="shiki material-theme-lighter" style="background-color:#FAFAFA;" tabindex="0"><code><span class="line"><span style="color:#90A4AE;">  </span><span style="color:#39ADB5;font-style:italic;">for</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">(</span><span style="color:#9C3EDA;">int</span><span style="color:#90A4AE;"> i </span><span style="color:#39ADB5;">=</span><span style="color:#90A4AE;"> </span><span style="color:#F76D47;">0</span><span style="color:#39ADB5;">;</span><span style="color:#90A4AE;"> i </span><span style="color:#39ADB5;">&lt;</span><span style="color:#90A4AE;"> grupoPersonas</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">size</span><span style="color:#39ADB5;">();</span><span style="color:#90A4AE;"> i</span><span style="color:#39ADB5;">++)</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">{</span></span>
<span class="line"><span style="color:#90A4AE;">    System</span><span style="color:#39ADB5;">.</span><span style="color:#90A4AE;">out</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">println</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">grupoPersonas</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">get</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">i</span><span style="color:#39ADB5;">));</span></span>
<span class="line"><span style="color:#90A4AE;">  </span><span style="color:#39ADB5;">}</span></span>
<span class="line"></span></code></pre></div><h3 id="d-2-usando-un-bucle-foreach-de-java" tabindex="-1">D.2. Usando un bucle foreach de Java</h3><p>Otra forma de recorrer el ArrayList es con un bucle similar al foreach de C#, aunque con el formato de un bucle for, pero en este caso indicando for(elemento : colección)</p><div class="language-java" data-ext="java"><pre class="shiki material-theme-lighter" style="background-color:#FAFAFA;" tabindex="0"><code><span class="line"><span style="color:#39ADB5;">    </span><span style="color:#90A4AE;font-style:italic;">// Obtenemos un objeto de tipo Persona en cada iteración del bucle</span></span>
<span class="line"><span style="color:#90A4AE;">    </span><span style="color:#39ADB5;font-style:italic;">for</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">(</span><span style="color:#9C3EDA;">Persona</span><span style="color:#90A4AE;"> p</span><span style="color:#39ADB5;font-style:italic;">:</span><span style="color:#90A4AE;"> grupoPersonas</span><span style="color:#39ADB5;">)</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">{</span></span>
<span class="line"><span style="color:#90A4AE;">        System</span><span style="color:#39ADB5;">.</span><span style="color:#90A4AE;">out</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">println</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">p</span><span style="color:#39ADB5;">);</span></span>
<span class="line"><span style="color:#90A4AE;">    </span><span style="color:#39ADB5;">}</span></span>
<span class="line"></span></code></pre></div><h3 id="d-3-usando-iterator" tabindex="-1">D.3. Usando Iterator</h3><p>El interface Iterator de Java permite movernos por una colección y acceder a sus elementos</p><div class="custom-container info"><p class="custom-container-title">java.lang.Iterator</p><p>Todas las colecciones de Java incluyen un método iterator() que devuelve una instancia de Iterator para recorrer la colección.</p><p>Iterator tiene 4 métodos:</p><ul><li><strong>hasNext()</strong> - devuelve true si hay un elemento más en la lista</li><li><strong>next()</strong> - devuelve el siguiente elemento de la lista</li><li><strong>remove()</strong> - elimina el último elemento de la lista que hemos obtenido con next()</li><li><strong>forEachRemaining()</strong> - realiza la acción indicada con cada uno de los elementos que quedan por recorrer de la lista</li></ul></div><p>Vamos a ver un ejemplo con los valores de la lista</p><div class="language-java" data-ext="java"><pre class="shiki material-theme-lighter" style="background-color:#FAFAFA;" tabindex="0"><code><span class="line"><span style="color:#90A4AE;">  </span><span style="color:#9C3EDA;">Iterator</span><span style="color:#39ADB5;">&lt;</span><span style="color:#9C3EDA;">Persona</span><span style="color:#39ADB5;">&gt;</span><span style="color:#90A4AE;"> iterator </span><span style="color:#39ADB5;">=</span><span style="color:#90A4AE;"> grupoPersonas</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">iterator</span><span style="color:#39ADB5;">();</span><span style="color:#90A4AE;">  </span></span>
<span class="line"><span style="color:#90A4AE;">  </span><span style="color:#39ADB5;font-style:italic;">while</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">iterator</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">hasNext</span><span style="color:#39ADB5;">())</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">{</span></span>
<span class="line"><span style="color:#90A4AE;">    System</span><span style="color:#39ADB5;">.</span><span style="color:#90A4AE;">out</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">println</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">iterator</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">next</span><span style="color:#39ADB5;">());</span></span>
<span class="line"><span style="color:#39ADB5;">}</span></span>
<span class="line"></span></code></pre></div><h3 id="d-4-usando-el-metodo-foreach-con-expresiones-lambda" tabindex="-1">D.4. Usando el método forEach con expresiones lambda</h3><p>En este caso aprovechamos el método foreach de las colecciones para poder realizar una acción concreta sobre cada uno de los elementos de la misma.</p><p>De forma similar al bucle foreach, indicamos un elemento de la lista y la acción a realizar sobre el mismo</p><div class="language-java" data-ext="java"><pre class="shiki material-theme-lighter" style="background-color:#FAFAFA;" tabindex="0"><code><span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// Para cada persona (p) -&gt; Acción a realizar</span></span>
<span class="line"><span style="color:#90A4AE;">  grupoPersonas</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">forEach</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">p </span><span style="color:#9C3EDA;">-&gt;</span><span style="color:#90A4AE;"> System</span><span style="color:#39ADB5;">.</span><span style="color:#90A4AE;">out</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">println</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">p</span><span style="color:#39ADB5;">));</span></span>
<span class="line"></span></code></pre></div><h3 id="d-5-eliminando-modificando-elementos-mientras-se-itera-sobre-la-coleccion" tabindex="-1">D.5 Eliminando / Modificando elementos mientras se itera sobre la colección</h3><p>Mientras se está recorriendo una colección, no con todos los tipos de bucles se puede modificar (añadir/eliminar elementos) de la colección. Vamos a ver el comportamiento de cada uno de ellos.</p><h4 id="d-5-1-con-un-bucle-for" tabindex="-1">D.5.1 Con un bucle for</h4><p>En este caso no tendríamos problemas. Al acceder por índice, podemos añadir o eliminar elementos mientras se recorre la colección.</p><div class="language-java" data-ext="java"><pre class="shiki material-theme-lighter" style="background-color:#FAFAFA;" tabindex="0"><code><span class="line"><span style="color:#90A4AE;">  </span><span style="color:#39ADB5;font-style:italic;">for</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">(</span><span style="color:#9C3EDA;">int</span><span style="color:#90A4AE;"> i </span><span style="color:#39ADB5;">=</span><span style="color:#90A4AE;"> </span><span style="color:#F76D47;">0</span><span style="color:#39ADB5;">;</span><span style="color:#90A4AE;"> i </span><span style="color:#39ADB5;">&lt;</span><span style="color:#90A4AE;"> grupoPersonas</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">size</span><span style="color:#39ADB5;">();</span><span style="color:#90A4AE;"> i</span><span style="color:#39ADB5;">++)</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">{</span></span>
<span class="line"><span style="color:#90A4AE;">    </span><span style="color:#39ADB5;font-style:italic;">if</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">grupoPersonas</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">get</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">i</span><span style="color:#39ADB5;">).</span><span style="color:#6182B8;">getNombre</span><span style="color:#39ADB5;">().</span><span style="color:#6182B8;">equals</span><span style="color:#39ADB5;">(</span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">Jordi</span><span style="color:#39ADB5;">&quot;</span><span style="color:#39ADB5;">))</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">{</span></span>
<span class="line"><span style="color:#90A4AE;">      grupoPersonas</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">remove</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">i</span><span style="color:#39ADB5;">);</span></span>
<span class="line"><span style="color:#90A4AE;">    </span><span style="color:#39ADB5;">}</span></span>
<span class="line"><span style="color:#90A4AE;">  </span><span style="color:#39ADB5;">}</span></span>
<span class="line"></span></code></pre></div><h4 id="d-5-2-con-un-bucle-foreach-de-java" tabindex="-1">D.5.2 Con un bucle foreach de Java</h4><div class="custom-container danger"><p class="custom-container-title">No modificable mientras se recorre</p><p>Si intentamos eliminar un elemento mientras lo recorremos con foreach, provocaremos una <code>java.util.ConcurrentModificationException</code>. Por lo tanto, sólo debemos usar este bucle si queremos leer sus elementos sin modificar la estructura de la colección.</p></div><div class="language-java" data-ext="java"><pre class="shiki material-theme-lighter" style="background-color:#FAFAFA;" tabindex="0"><code><span class="line"><span style="color:#90A4AE;">  </span><span style="color:#39ADB5;font-style:italic;">for</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">(</span><span style="color:#9C3EDA;">Persona</span><span style="color:#90A4AE;"> p </span><span style="color:#39ADB5;font-style:italic;">:</span><span style="color:#90A4AE;"> grupoPersonas</span><span style="color:#39ADB5;">)</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">{</span></span>
<span class="line"><span style="color:#90A4AE;">    </span><span style="color:#39ADB5;font-style:italic;">if</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">p</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">getPeso</span><span style="color:#39ADB5;">()&gt;</span><span style="color:#F76D47;">100</span><span style="color:#39ADB5;">)</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">{</span></span>
<span class="line"><span style="color:#90A4AE;">      grupoPersonas</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">remove</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">p</span><span style="color:#39ADB5;">);</span></span>
<span class="line"><span style="color:#90A4AE;">    </span><span style="color:#39ADB5;">}</span></span>
<span class="line"><span style="color:#90A4AE;">    System</span><span style="color:#39ADB5;">.</span><span style="color:#90A4AE;">out</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">println</span><span style="color:#39ADB5;">(</span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">Eliminada: </span><span style="color:#39ADB5;">&quot;</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">+</span><span style="color:#90A4AE;"> p</span><span style="color:#39ADB5;">);</span></span>
<span class="line"><span style="color:#39ADB5;">}</span></span>
<span class="line"></span></code></pre></div><h4 id="d-5-3-con-iterator" tabindex="-1">D.5.3 Con Iterator</h4><p>Siempre que usemos el método remove de Iterator para eliminar elementos de la colección mientras la recorremos, podremos hacerlo sin que se genere ninguna excepción.</p><div class="language-java" data-ext="java"><pre class="shiki material-theme-lighter" style="background-color:#FAFAFA;" tabindex="0"><code><span class="line"><span style="color:#90A4AE;">  </span><span style="color:#9C3EDA;">Iterator</span><span style="color:#39ADB5;">&lt;</span><span style="color:#9C3EDA;">Persona</span><span style="color:#39ADB5;">&gt;</span><span style="color:#90A4AE;"> iterator </span><span style="color:#39ADB5;">=</span><span style="color:#90A4AE;"> grupoPersonas</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">iterator</span><span style="color:#39ADB5;">();</span></span>
<span class="line"><span style="color:#90A4AE;">  </span><span style="color:#39ADB5;font-style:italic;">while</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">iterator</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">hasNext</span><span style="color:#39ADB5;">())</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">{</span></span>
<span class="line"><span style="color:#90A4AE;">    </span><span style="color:#9C3EDA;">Persona</span><span style="color:#90A4AE;"> p </span><span style="color:#39ADB5;">=</span><span style="color:#90A4AE;"> iterator</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">next</span><span style="color:#39ADB5;">();</span></span>
<span class="line"><span style="color:#90A4AE;">    </span><span style="color:#39ADB5;font-style:italic;">if</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">p</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">getAltura</span><span style="color:#39ADB5;">()</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">&lt;</span><span style="color:#90A4AE;"> </span><span style="color:#F76D47;">100</span><span style="color:#39ADB5;">)</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">{</span></span>
<span class="line"><span style="color:#39ADB5;">      </span><span style="color:#90A4AE;font-style:italic;">// Si borramos usando iterator.remove funciona</span></span>
<span class="line"><span style="color:#90A4AE;">      iterator</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">remove</span><span style="color:#39ADB5;">();</span></span>
<span class="line"><span style="color:#90A4AE;">    </span><span style="color:#39ADB5;">}</span></span>
<span class="line"><span style="color:#90A4AE;">  </span><span style="color:#39ADB5;">}</span></span>
<span class="line"></span></code></pre><div class="highlight-lines"><br><br><br><br><div class="highlight-line"> </div><br><br><br></div></div><h4 id="d-5-4-con-el-metodo-foreach-y-expresiones-lambda" tabindex="-1">D.5.4 Con el método forEach y expresiones lambda</h4><div class="custom-container danger"><p class="custom-container-title">No modificable mientras se recorre</p><p>Si intentamos eliminar un elemento mientras lo recorremos con foreach, provocaremos una <code>java.util.ConcurrentModificationException</code>. Por lo tanto, sólo debemos usar este bucle si queremos leer sus elementos sin modificar la estructura de la colección.</p></div><div class="language-java" data-ext="java"><pre class="shiki material-theme-lighter" style="background-color:#FAFAFA;" tabindex="0"><code><span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// Elimina si encuentra un elemento concreto</span></span>
<span class="line"><span style="color:#90A4AE;">  grupoPersonas</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">forEach</span><span style="color:#39ADB5;">((</span><span style="color:#90A4AE;">p</span><span style="color:#39ADB5;">)</span><span style="color:#90A4AE;"> </span><span style="color:#9C3EDA;">-&gt;</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">{</span><span style="color:#39ADB5;font-style:italic;">if</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">p</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">getNombre</span><span style="color:#39ADB5;">().</span><span style="color:#6182B8;">equals</span><span style="color:#39ADB5;">(</span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">Jordi</span><span style="color:#39ADB5;">&quot;</span><span style="color:#39ADB5;">))</span><span style="color:#90A4AE;"> grupoPersonas</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">remove</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">p</span><span style="color:#39ADB5;">);});</span></span>
<span class="line"></span></code></pre></div><p>Otra cosa es que intentemos hacer cambios en los valores de la colección, por ejemplo, intercambiar los apellidos</p><div class="language-java" data-ext="java"><pre class="shiki material-theme-lighter" style="background-color:#FAFAFA;" tabindex="0"><code><span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// Intercambia los apellidos de todas las personas</span></span>
<span class="line"><span style="color:#90A4AE;">  grupoPersonas</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">forEach</span><span style="color:#39ADB5;">((</span><span style="color:#90A4AE;">p</span><span style="color:#39ADB5;">)</span><span style="color:#90A4AE;"> </span><span style="color:#9C3EDA;">-&gt;</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">{</span></span>
<span class="line"><span style="color:#90A4AE;">      </span><span style="color:#9C3EDA;">String</span><span style="color:#90A4AE;"> aux </span><span style="color:#39ADB5;">=</span><span style="color:#90A4AE;"> p</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">getApellidos</span><span style="color:#39ADB5;">();</span></span>
<span class="line"><span style="color:#90A4AE;">      p</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">setApellidos</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">p</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">getNombre</span><span style="color:#39ADB5;">());</span></span>
<span class="line"><span style="color:#90A4AE;">      p</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">setNombre</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">aux</span><span style="color:#39ADB5;">);</span><span style="color:#90A4AE;">                </span></span>
<span class="line"><span style="color:#90A4AE;">    </span><span style="color:#39ADB5;">}</span></span>
<span class="line"><span style="color:#90A4AE;">  </span><span style="color:#39ADB5;">);</span></span>
<span class="line"></span></code></pre></div><div class="pagebreak"></div><h2 id="e-busqueda-de-elementos" tabindex="-1">E. Búsqueda de elementos</h2><p>Para buscar elementos en un ArrayList hay distintas formas de hacerlo. Desde los propios métodos que nos ofrece la clase hasta el uso de API Stream. Vamos a describir cada uno de ellos</p><h3 id="e-1-busqueda-usando-los-metodos-de-la-clase" tabindex="-1">E.1. Búsqueda usando los métodos de la clase</h3><p>La clase ArrayList nos ofrece diferentes alternativas para buscar y/o saber si un elemento está presente en la colección. Así, podemos usar los métodos</p><div class="language-java" data-ext="java"><pre class="shiki material-theme-lighter" style="background-color:#FAFAFA;" tabindex="0"><code><span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// Comprobar si está el objeto en la colección</span></span>
<span class="line"><span style="color:#90A4AE;">  </span><span style="color:#9C3EDA;">boolean</span><span style="color:#90A4AE;"> existe </span><span style="color:#39ADB5;">=</span><span style="color:#90A4AE;"> grupoPersonas</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">contains</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">p1</span><span style="color:#39ADB5;">);</span></span>
<span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// O simplemente obtener su posición, si lo encuentra</span></span>
<span class="line"><span style="color:#90A4AE;">  grupoPersonas</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">indexOf</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">p1</span><span style="color:#39ADB5;">);</span></span>
<span class="line"><span style="color:#90A4AE;">  grupoPersonas</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">lastIndexOf</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">p1</span><span style="color:#39ADB5;">);</span></span>
<span class="line"></span></code></pre></div><h3 id="e-2-busqueda-por-el-valor-de-una-propiedad" tabindex="-1">E.2. Búsqueda por el valor de una propiedad</h3><p>A diferencia del caso anterior, si queremos buscar un objeto que contenga un valor concreto en un campo, debemos recorrer la colección hasta encontrarlo. Para eso, una de las alternativas es usar alguno de los bucles vistos anteriormente.</p><div class="language-java" data-ext="java"><pre class="shiki material-theme-lighter" style="background-color:#FAFAFA;" tabindex="0"><code><span class="line"><span style="color:#90A4AE;">  </span><span style="color:#9C3EDA;">Iterator</span><span style="color:#39ADB5;">&lt;</span><span style="color:#9C3EDA;">Persona</span><span style="color:#39ADB5;">&gt;</span><span style="color:#90A4AE;"> it </span><span style="color:#39ADB5;">=</span><span style="color:#90A4AE;"> grupoPersonas</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">iterator</span><span style="color:#39ADB5;">();</span></span>
<span class="line"><span style="color:#90A4AE;">  </span><span style="color:#39ADB5;font-style:italic;">while</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">it</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">hasNext</span><span style="color:#39ADB5;">())</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">{</span></span>
<span class="line"><span style="color:#90A4AE;">    </span><span style="color:#9C3EDA;">Persona</span><span style="color:#90A4AE;"> p </span><span style="color:#39ADB5;">=</span><span style="color:#90A4AE;"> it</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">next</span><span style="color:#39ADB5;">();</span></span>
<span class="line"><span style="color:#90A4AE;">    </span><span style="color:#39ADB5;font-style:italic;">if</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">p</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">getNombre</span><span style="color:#39ADB5;">().</span><span style="color:#6182B8;">equals</span><span style="color:#39ADB5;">(</span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">Jorge</span><span style="color:#39ADB5;">&quot;</span><span style="color:#39ADB5;">))</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">{</span></span>
<span class="line"><span style="color:#39ADB5;">      </span><span style="color:#90A4AE;font-style:italic;">// Se puede obtener el elemento o bien modificarlo</span></span>
<span class="line"><span style="color:#90A4AE;">      System</span><span style="color:#39ADB5;">.</span><span style="color:#90A4AE;">out</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">println</span><span style="color:#39ADB5;">(</span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">Encontrado: </span><span style="color:#39ADB5;">&quot;</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">+</span><span style="color:#90A4AE;"> p</span><span style="color:#39ADB5;">);</span></span>
<span class="line"><span style="color:#90A4AE;">      </span><span style="color:#39ADB5;font-style:italic;">break</span><span style="color:#39ADB5;">;</span></span>
<span class="line"><span style="color:#90A4AE;">    </span><span style="color:#39ADB5;">}</span></span>
<span class="line"><span style="color:#90A4AE;">  </span><span style="color:#39ADB5;">}</span></span>
<span class="line"></span></code></pre></div><h3 id="e-3-busqueda-usando-expresiones-lambda" tabindex="-1">E.3. Búsqueda usando expresiones lambda</h3><p>Mediante expresiones lambda, podemos incluir una condicional que nos haga el filtrado de elementos que deseemos</p><div class="language-java" data-ext="java"><pre class="shiki material-theme-lighter" style="background-color:#FAFAFA;" tabindex="0"><code><span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// Puede haber más de un elemento que cumpla el criterio de búsqueda</span></span>
<span class="line"><span style="color:#90A4AE;">  grupoPersonas</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">forEach</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">p </span><span style="color:#9C3EDA;">-&gt;</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">{</span></span>
<span class="line"><span style="color:#90A4AE;">    </span><span style="color:#39ADB5;font-style:italic;">if</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">p</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">getNombre</span><span style="color:#39ADB5;">().</span><span style="color:#6182B8;">equals</span><span style="color:#39ADB5;">(</span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">Jorge</span><span style="color:#39ADB5;">&quot;</span><span style="color:#39ADB5;">))</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">{</span></span>
<span class="line"><span style="color:#39ADB5;">      </span><span style="color:#90A4AE;font-style:italic;">// Se puede obtener el elemento o bien modificarlo</span></span>
<span class="line"><span style="color:#90A4AE;">      System</span><span style="color:#39ADB5;">.</span><span style="color:#90A4AE;">out</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">println</span><span style="color:#39ADB5;">(</span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">Encontrado:: </span><span style="color:#39ADB5;">&quot;</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">+</span><span style="color:#90A4AE;"> p</span><span style="color:#39ADB5;">);</span></span>
<span class="line"><span style="color:#90A4AE;">    </span><span style="color:#39ADB5;">}</span></span>
<span class="line"><span style="color:#90A4AE;">  </span><span style="color:#39ADB5;">});</span></span>
<span class="line"></span></code></pre></div><h3 id="e-4-busqueda-usando-api-stream" tabindex="-1">E.4. Búsqueda usando API Stream</h3><p>En este tipo de acciones es donde ya podemos empezar a ver la potencia que ofrece el API Stream para el manejo y gestión de las colecciones. Podemos emplear varios métodos, como filter, findAny, findFirst, allMatch, anyMatch, count, distinct. Como veremos en el siguiente apartado, esos resultados los podemos guardar en forma de subcolección</p><div class="language-java" data-ext="java"><pre class="shiki material-theme-lighter" style="background-color:#FAFAFA;" tabindex="0"><code><span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// Puede haber más de un elemento que cumpla el criterio de búsqueda</span></span>
<span class="line"></span>
<span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// Obtener un subarray con los elementos que cumplan el criterio</span></span>
<span class="line"><span style="color:#90A4AE;">  grupoPersonas</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">stream</span><span style="color:#39ADB5;">()</span></span>
<span class="line"><span style="color:#90A4AE;">          </span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">filter</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">p </span><span style="color:#9C3EDA;">-&gt;</span><span style="color:#90A4AE;"> p</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">getAltura</span><span style="color:#39ADB5;">()</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">&gt;</span><span style="color:#90A4AE;"> </span><span style="color:#F76D47;">170</span><span style="color:#39ADB5;">)</span></span>
<span class="line"><span style="color:#90A4AE;">          </span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">collect</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">Collectors</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">toList</span><span style="color:#39ADB5;">());</span></span>
<span class="line"></span>
<span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// O bien recorrer la lista de entradas obtenidas</span></span>
<span class="line"><span style="color:#90A4AE;">  </span><span style="color:#39ADB5;font-style:italic;">for</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">(</span><span style="color:#9C3EDA;">Persona</span><span style="color:#90A4AE;"> p </span><span style="color:#39ADB5;font-style:italic;">:</span><span style="color:#90A4AE;"> grupoPersonas</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">stream</span><span style="color:#39ADB5;">()</span></span>
<span class="line"><span style="color:#90A4AE;">          </span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">filter</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">p </span><span style="color:#9C3EDA;">-&gt;</span><span style="color:#90A4AE;"> p</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">getAltura</span><span style="color:#39ADB5;">()</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">&gt;</span><span style="color:#90A4AE;"> </span><span style="color:#F76D47;">170</span><span style="color:#39ADB5;">)</span></span>
<span class="line"><span style="color:#90A4AE;">          </span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">collect</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">Collectors</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">toList</span><span style="color:#39ADB5;">()))</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">{</span></span>
<span class="line"><span style="color:#90A4AE;">      System</span><span style="color:#39ADB5;">.</span><span style="color:#90A4AE;">out</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">println</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">p</span><span style="color:#39ADB5;">);</span><span style="color:#90A4AE;">   </span></span>
<span class="line"><span style="color:#90A4AE;">  </span><span style="color:#39ADB5;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#90A4AE;">  </span><span style="color:#39ADB5;font-style:italic;">for</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">(</span><span style="color:#9C3EDA;">Persona</span><span style="color:#90A4AE;"> p </span><span style="color:#39ADB5;font-style:italic;">:</span><span style="color:#90A4AE;"> grupoPersonas</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">stream</span><span style="color:#39ADB5;">()</span></span>
<span class="line"><span style="color:#90A4AE;">          </span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">filter</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">p </span><span style="color:#9C3EDA;">-&gt;</span><span style="color:#90A4AE;"> p</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">getAltura</span><span style="color:#39ADB5;">()</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">&gt;</span><span style="color:#90A4AE;"> </span><span style="color:#F76D47;">170</span><span style="color:#39ADB5;">)</span></span>
<span class="line"><span style="color:#90A4AE;">          </span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">collect</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">Collectors</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">toList</span><span style="color:#39ADB5;">()))</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">{</span></span>
<span class="line"><span style="color:#90A4AE;">      System</span><span style="color:#39ADB5;">.</span><span style="color:#90A4AE;">out</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">println</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">p</span><span style="color:#39ADB5;">);</span><span style="color:#90A4AE;">        </span><span style="color:#90A4AE;font-style:italic;">// Muestra solo la persona</span></span>
<span class="line"><span style="color:#90A4AE;">  </span><span style="color:#39ADB5;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// Saber cuántos cumplen el criterio de búsqueda</span></span>
<span class="line"><span style="color:#90A4AE;">  grupoPersonas</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">stream</span><span style="color:#39ADB5;">().</span><span style="color:#6182B8;">filter</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">p </span><span style="color:#9C3EDA;">-&gt;</span><span style="color:#90A4AE;"> p</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">getAltura</span><span style="color:#39ADB5;">()</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">&gt;</span><span style="color:#90A4AE;"> </span><span style="color:#F76D47;">170</span><span style="color:#39ADB5;">).</span><span style="color:#6182B8;">count</span><span style="color:#39ADB5;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// Obtener el primero que cumpla el criterio, si es que hay alguno</span></span>
<span class="line"><span style="color:#90A4AE;">  </span><span style="color:#9C3EDA;">Optional</span><span style="color:#39ADB5;">&lt;</span><span style="color:#9C3EDA;">Persona</span><span style="color:#39ADB5;">&gt;</span><span style="color:#90A4AE;"> first </span><span style="color:#39ADB5;">=</span><span style="color:#90A4AE;"> grupoPersonas</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">stream</span><span style="color:#39ADB5;">()</span></span>
<span class="line"><span style="color:#90A4AE;">          </span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">filter</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">p </span><span style="color:#9C3EDA;">-&gt;</span><span style="color:#90A4AE;"> p</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">getAltura</span><span style="color:#39ADB5;">()</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">&gt;</span><span style="color:#90A4AE;"> </span><span style="color:#F76D47;">170</span><span style="color:#39ADB5;">)</span></span>
<span class="line"><span style="color:#90A4AE;">          </span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">findFirst</span><span style="color:#39ADB5;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// Obtener cualquiera que cumpla el criterio, o null si no hay ninguno</span></span>
<span class="line"><span style="color:#90A4AE;">  </span><span style="color:#9C3EDA;">Persona</span><span style="color:#90A4AE;"> any </span><span style="color:#39ADB5;">=</span><span style="color:#90A4AE;"> grupoPersonas</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">stream</span><span style="color:#39ADB5;">()</span></span>
<span class="line"><span style="color:#90A4AE;">          </span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">filter</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">p </span><span style="color:#9C3EDA;">-&gt;</span><span style="color:#90A4AE;"> p</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">getAltura</span><span style="color:#39ADB5;">()</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">&gt;</span><span style="color:#90A4AE;"> </span><span style="color:#F76D47;">170</span><span style="color:#39ADB5;">)</span><span style="color:#90A4AE;">                </span></span>
<span class="line"><span style="color:#90A4AE;">          </span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">findAny</span><span style="color:#39ADB5;">()</span></span>
<span class="line"><span style="color:#90A4AE;">          </span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">orElse</span><span style="color:#39ADB5;">(null);</span></span>
<span class="line"></span></code></pre></div><div class="pagebreak"></div><h2 id="f-obtencion-de-subcolecciones" tabindex="-1">F. Obtención de subcolecciones</h2><p>Lo podemos considerar un tipo especial de búsqueda en el que el objetivo es conseguir una colección con los elementos que cumplan un determinado criterio.</p><p>Así, la forma de buscar es idéntica a la del apartado anterior, pero en este caso lo que obtendremos de esa búsqueda será una nueva lista con un subconjunto de elementos de la original</p><h3 id="f-1-subcolecciones-usando-bucles" tabindex="-1">F.1. Subcolecciones usando bucles</h3><p>Para obtener los elementos podemos aplicar lo aprendido en el anterior punto. Buscaremos elemento a elemento y, cuando se cumpla una condición especificada, añadiremos los elementos encontrados a una nueva colección.</p><div class="language-java" data-ext="java"><pre class="shiki material-theme-lighter" style="background-color:#FAFAFA;" tabindex="0"><code><span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// Personas cuyo nombre empieza por &quot;M&quot;</span></span>
<span class="line"><span style="color:#90A4AE;">  </span><span style="color:#9C3EDA;">ArrayList</span><span style="color:#39ADB5;">&lt;</span><span style="color:#9C3EDA;">Persona</span><span style="color:#39ADB5;">&gt;</span><span style="color:#90A4AE;"> personas </span><span style="color:#39ADB5;">=</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;font-style:italic;">new</span><span style="color:#90A4AE;"> </span><span style="color:#9C3EDA;">ArrayList</span><span style="color:#39ADB5;">&lt;&gt;();</span></span>
<span class="line"><span style="color:#90A4AE;">  </span><span style="color:#39ADB5;font-style:italic;">for</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">(</span><span style="color:#9C3EDA;">Persona</span><span style="color:#90A4AE;"> p </span><span style="color:#39ADB5;font-style:italic;">:</span><span style="color:#90A4AE;"> grupoPersonas</span><span style="color:#39ADB5;">)</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">{</span></span>
<span class="line"><span style="color:#90A4AE;">    </span><span style="color:#39ADB5;font-style:italic;">if</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">p</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">getNombre</span><span style="color:#39ADB5;">().</span><span style="color:#6182B8;">startsWith</span><span style="color:#39ADB5;">(</span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">M</span><span style="color:#39ADB5;">&quot;</span><span style="color:#39ADB5;">))</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">{</span></span>
<span class="line"><span style="color:#90A4AE;">      personas</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">add</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">p</span><span style="color:#39ADB5;">);</span></span>
<span class="line"><span style="color:#90A4AE;">    </span><span style="color:#39ADB5;">}</span></span>
<span class="line"><span style="color:#90A4AE;">  </span><span style="color:#39ADB5;">}</span></span>
<span class="line"></span></code></pre></div><h3 id="f-2-subcolecciones-usando-expresiones-lambda" tabindex="-1">F.2. Subcolecciones usando expresiones lambda</h3><p>La idea es similar al punto anterior</p><div class="language-java" data-ext="java"><pre class="shiki material-theme-lighter" style="background-color:#FAFAFA;" tabindex="0"><code><span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// Personas cuyo nombre empieza por &quot;M&quot;</span></span>
<span class="line"><span style="color:#90A4AE;">  </span><span style="color:#9C3EDA;">ArrayList</span><span style="color:#39ADB5;">&lt;</span><span style="color:#9C3EDA;">Persona</span><span style="color:#39ADB5;">&gt;</span><span style="color:#90A4AE;"> personas2 </span><span style="color:#39ADB5;">=</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;font-style:italic;">new</span><span style="color:#90A4AE;"> </span><span style="color:#9C3EDA;">ArrayList</span><span style="color:#39ADB5;">&lt;&gt;();</span></span>
<span class="line"><span style="color:#90A4AE;">  grupoPersonas</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">forEach</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">p </span><span style="color:#9C3EDA;">-&gt;</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">{</span></span>
<span class="line"><span style="color:#90A4AE;">    </span><span style="color:#39ADB5;font-style:italic;">if</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">p</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">getNombre</span><span style="color:#39ADB5;">().</span><span style="color:#6182B8;">startsWith</span><span style="color:#39ADB5;">(</span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">M</span><span style="color:#39ADB5;">&quot;</span><span style="color:#39ADB5;">))</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">{</span></span>
<span class="line"><span style="color:#90A4AE;">      personas2</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">add</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">p</span><span style="color:#39ADB5;">);</span></span>
<span class="line"><span style="color:#90A4AE;">    </span><span style="color:#39ADB5;">}</span></span>
<span class="line"><span style="color:#90A4AE;">  </span><span style="color:#39ADB5;">});</span></span>
<span class="line"></span></code></pre></div><h3 id="f-3-subcolecciones-usando-api-stream" tabindex="-1">F.3. Subcolecciones usando API Stream</h3><p>Podemos obtener directamente una subcolección mediante el filtrado, haciendo subconjuntos y guardando el resultado.</p><p>Con API Stream podemos guardar el resultado usando diferentes formas de .collect, que darán como resultados distintos tipos de colecciones.</p><div class="language-java" data-ext="java"><pre class="shiki material-theme-lighter" style="background-color:#FAFAFA;" tabindex="0"><code><span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// ArrayList de Personas cuyo nombre empieza por &quot;M&quot;</span></span>
<span class="line"><span style="color:#90A4AE;">  </span><span style="color:#9C3EDA;">ArrayList</span><span style="color:#39ADB5;">&lt;</span><span style="color:#9C3EDA;">Persona</span><span style="color:#39ADB5;">&gt;</span><span style="color:#90A4AE;"> personas3 </span><span style="color:#39ADB5;">=</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">(</span><span style="color:#9C3EDA;">ArrayList</span><span style="color:#39ADB5;">&lt;</span><span style="color:#90A4AE;">Persona</span><span style="color:#39ADB5;">&gt;)</span><span style="color:#90A4AE;"> grupoPersonas</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">stream</span><span style="color:#39ADB5;">()</span></span>
<span class="line"><span style="color:#90A4AE;">          </span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">filter</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">p </span><span style="color:#9C3EDA;">-&gt;</span><span style="color:#90A4AE;"> p</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">getNombre</span><span style="color:#39ADB5;">().</span><span style="color:#6182B8;">startsWith</span><span style="color:#39ADB5;">(</span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">M</span><span style="color:#39ADB5;">&quot;</span><span style="color:#39ADB5;">))</span></span>
<span class="line"><span style="color:#90A4AE;">          </span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">collect</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">Collectors</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">toList</span><span style="color:#39ADB5;">());</span></span>
<span class="line"></span>
<span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// Conjunto de Personas cuyo nombre empieza por &quot;M&quot;</span></span>
<span class="line"><span style="color:#90A4AE;">  </span><span style="color:#9C3EDA;">Set</span><span style="color:#39ADB5;">&lt;</span><span style="color:#9C3EDA;">Persona</span><span style="color:#39ADB5;">&gt;</span><span style="color:#90A4AE;"> personas4 </span><span style="color:#39ADB5;">=</span><span style="color:#90A4AE;"> grupoPersonas</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">stream</span><span style="color:#39ADB5;">()</span></span>
<span class="line"><span style="color:#90A4AE;">          </span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">filter</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">p </span><span style="color:#9C3EDA;">-&gt;</span><span style="color:#90A4AE;"> p</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">getNombre</span><span style="color:#39ADB5;">().</span><span style="color:#6182B8;">startsWith</span><span style="color:#39ADB5;">(</span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">M</span><span style="color:#39ADB5;">&quot;</span><span style="color:#39ADB5;">))</span></span>
<span class="line"><span style="color:#90A4AE;">          </span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">collect</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">Collectors</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">toSet</span><span style="color:#39ADB5;">());</span></span>
<span class="line"><span style="color:#90A4AE;">  </span></span>
<span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// Mapa de Personas cuyo nombre empieza por &quot;M&quot;</span></span>
<span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// En la construcción del mapa, hay que elegir un campo que sirva de clave</span></span>
<span class="line"><span style="color:#90A4AE;">  </span><span style="color:#9C3EDA;">Map</span><span style="color:#39ADB5;">&lt;</span><span style="color:#9C3EDA;">String</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#9C3EDA;">Persona</span><span style="color:#39ADB5;">&gt;</span><span style="color:#90A4AE;"> personas5 </span><span style="color:#39ADB5;">=</span><span style="color:#90A4AE;"> grupoPersonas</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">stream</span><span style="color:#39ADB5;">()</span></span>
<span class="line"><span style="color:#90A4AE;">          </span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">filter</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">p </span><span style="color:#9C3EDA;">-&gt;</span><span style="color:#90A4AE;"> p</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">getNombre</span><span style="color:#39ADB5;">().</span><span style="color:#6182B8;">startsWith</span><span style="color:#39ADB5;">(</span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">M</span><span style="color:#39ADB5;">&quot;</span><span style="color:#39ADB5;">))</span></span>
<span class="line"><span style="color:#90A4AE;">          </span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">collect</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">Collectors</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">toMap</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">Persona</span><span style="color:#39ADB5;font-style:italic;">::</span><span style="color:#90A4AE;">getApellidos</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> Function</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">identity</span><span style="color:#39ADB5;">()));</span></span>
<span class="line"></span></code></pre></div><div class="pagebreak"></div><h2 id="g-ordenacion-de-elementos" tabindex="-1">G. Ordenación de elementos</h2><h3 id="g-1-ordenar-usando-metodos-de-collection" tabindex="-1">G.1. Ordenar usando métodos de Collection</h3><p>Si lo que queremos es tener el conjunto ordenados, la forma más fácil es ordenarla usando el método sort() de Collection.</p><div class="language-java" data-ext="java"><pre class="shiki material-theme-lighter" style="background-color:#FAFAFA;" tabindex="0"><code><span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// Ordena según el método compareTo sobrescrito al implementar el interfaz Comparable</span></span>
<span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// Si no se ha implementado, ordena según el orden natural</span></span>
<span class="line"><span style="color:#90A4AE;">  Collections</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">sort</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">grupoPersonas</span><span style="color:#39ADB5;">);</span></span>
<span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// Ordena por un campo cualquiera que indiquemos</span></span>
<span class="line"><span style="color:#90A4AE;">  Collections</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">sort</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">grupoPersonas</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> Comparator</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">comparing</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">Persona</span><span style="color:#39ADB5;font-style:italic;">::</span><span style="color:#90A4AE;">getApellidos</span><span style="color:#39ADB5;">));</span></span>
<span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// Con Comparator tenemos disponibles varios comparadores (naturalOrder, reverseOrder, nullsFirst, ....)</span></span>
<span class="line"></span></code></pre></div><div class="custom-container info"><p class="custom-container-title">Interfaz Comparable</p><p>Para que la primera forma de sort funcione, la clase Persona debe implementar el interfaz Comparable y sobrescribir su método <code>compareTo</code> para definir la forma de ordenar los objetos de tipo Persona.</p><p>Veremos más adelante que tenemos formas de definir el comparador usando expresiones lambda o APi Stream, permitiendo mayor flexibilidad a la hora de comparar elementos.</p><div class="language-java" data-ext="java"><pre class="shiki material-theme-lighter" style="background-color:#FAFAFA;" tabindex="0"><code><span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// Un ejemplo, si queremos ordenar a las personas por edad</span></span>
<span class="line"><span style="color:#90A4AE;">    </span><span style="color:#39ADB5;">@</span><span style="color:#9C3EDA;">Override</span></span>
<span class="line"><span style="color:#90A4AE;">    </span><span style="color:#9C3EDA;">public</span><span style="color:#90A4AE;"> </span><span style="color:#9C3EDA;">int</span><span style="color:#90A4AE;"> </span><span style="color:#6182B8;">compareTo</span><span style="color:#39ADB5;">(</span><span style="color:#9C3EDA;">Object</span><span style="color:#90A4AE;"> o</span><span style="color:#39ADB5;">)</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">{</span><span style="color:#90A4AE;">        </span></span>
<span class="line"><span style="color:#90A4AE;">        </span><span style="color:#39ADB5;font-style:italic;">return</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">((</span><span style="color:#90A4AE;">Integer</span><span style="color:#39ADB5;">)this.</span><span style="color:#6182B8;">getEdad</span><span style="color:#39ADB5;">()).</span><span style="color:#6182B8;">compareTo</span><span style="color:#39ADB5;">((</span><span style="color:#90A4AE;">Integer</span><span style="color:#39ADB5;">)((</span><span style="color:#90A4AE;">Persona</span><span style="color:#39ADB5;">)</span><span style="color:#90A4AE;">o</span><span style="color:#39ADB5;">).</span><span style="color:#6182B8;">getEdad</span><span style="color:#39ADB5;">());</span></span>
<span class="line"><span style="color:#90A4AE;">    </span><span style="color:#39ADB5;">}</span></span>
<span class="line"></span></code></pre></div></div><h3 id="g-2-ordenar-con-expresiones-lambda" tabindex="-1">G.2. Ordenar con expresiones lambda</h3><p>De esta forma no es necesario implementar el interfaz Comparable, ya que podemos indicar la comparación que queremos hacer como parámetro del método sort.</p><p>Así podemos tener distintas formas de ordenar, según nos convenga.</p><div class="language-java" data-ext="java"><pre class="shiki material-theme-lighter" style="background-color:#FAFAFA;" tabindex="0"><code><span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// Indicamos la comparación que queremos hacer. Podemos usar compareTo </span></span>
<span class="line"><span style="color:#90A4AE;">  Collections</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">sort</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">grupoPersonas</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">e1</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> e2</span><span style="color:#39ADB5;">)</span><span style="color:#90A4AE;"> </span><span style="color:#9C3EDA;">-&gt;</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">((</span><span style="color:#90A4AE;">Integer</span><span style="color:#39ADB5;">)</span><span style="color:#90A4AE;">e1</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">getEdad</span><span style="color:#39ADB5;">()).</span><span style="color:#6182B8;">compareTo</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">e2</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">getEdad</span><span style="color:#39ADB5;">()));</span></span>
<span class="line"><span style="color:#90A4AE;">  System</span><span style="color:#39ADB5;">.</span><span style="color:#90A4AE;">out</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">println</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">grupoPersonas</span><span style="color:#39ADB5;">);</span><span style="color:#90A4AE;">      </span></span>
<span class="line"></span>
<span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// o bien podemos definir nuestro propio comparador</span></span>
<span class="line"><span style="color:#90A4AE;">  Collections</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">sort</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">grupoPersonas</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">p1</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> p2</span><span style="color:#39ADB5;">)</span><span style="color:#90A4AE;"> </span><span style="color:#9C3EDA;">-&gt;</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">{</span></span>
<span class="line"><span style="color:#90A4AE;">    </span><span style="color:#9C3EDA;">String</span><span style="color:#90A4AE;"> nombreCompleto1 </span><span style="color:#39ADB5;">=</span><span style="color:#90A4AE;"> p1</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">getApellidos</span><span style="color:#39ADB5;">()</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">+</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">, </span><span style="color:#39ADB5;">&quot;</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">+</span><span style="color:#90A4AE;"> p1</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">getNombre</span><span style="color:#39ADB5;">();</span></span>
<span class="line"><span style="color:#90A4AE;">    </span><span style="color:#9C3EDA;">String</span><span style="color:#90A4AE;"> nombreCompleto2 </span><span style="color:#39ADB5;">=</span><span style="color:#90A4AE;"> p2</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">getApellidos</span><span style="color:#39ADB5;">()</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">+</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">, </span><span style="color:#39ADB5;">&quot;</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">+</span><span style="color:#90A4AE;"> p2</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">getNombre</span><span style="color:#39ADB5;">();</span></span>
<span class="line"><span style="color:#90A4AE;">    </span><span style="color:#39ADB5;font-style:italic;">return</span><span style="color:#90A4AE;"> nombreCompleto1</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">compareTo</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">nombreCompleto2</span><span style="color:#39ADB5;">);</span></span>
<span class="line"><span style="color:#39ADB5;">});</span></span>
<span class="line"></span></code></pre></div><h3 id="g-3-ordenar-con-api-stream" tabindex="-1">G.3. Ordenar con API Stream</h3><p>Con API Stream usamos también el método sorted para indicar qué comparación se debe realizar. Tenemos varias opciones en función del tipo de dato que pasemos.</p><p>Como en el caso anterior, el más flexible es aquel en el que indicamos, mediante una expresión lambda, qué comparación realizar.</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="shiki material-theme-lighter" style="background-color:#FAFAFA;" tabindex="0"><code><span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// Guardamos el resultado en una nueva lista con los elementos ordenados</span></span>
<span class="line"><span style="color:#90A4AE;">  </span><span style="color:#9C3EDA;">ArrayList</span><span style="color:#39ADB5;">&lt;</span><span style="color:#9C3EDA;">Persona</span><span style="color:#39ADB5;">&gt;</span><span style="color:#90A4AE;"> grupoPersonasOrdenado </span><span style="color:#39ADB5;">=</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">(</span><span style="color:#9C3EDA;">ArrayList</span><span style="color:#39ADB5;">&lt;</span><span style="color:#90A4AE;">Persona</span><span style="color:#39ADB5;">&gt;)</span><span style="color:#90A4AE;"> grupoPersonas</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">stream</span><span style="color:#39ADB5;">()</span></span>
<span class="line"><span style="color:#39ADB5;">          </span><span style="color:#90A4AE;font-style:italic;">// En este caso ordenamos por apellido, ascendente.</span></span>
<span class="line"><span style="color:#90A4AE;">          </span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">sorted</span><span style="color:#39ADB5;">((</span><span style="color:#90A4AE;">p1</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> p2</span><span style="color:#39ADB5;">)</span><span style="color:#90A4AE;"> </span><span style="color:#9C3EDA;">-&gt;</span><span style="color:#90A4AE;"> p1</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">getApellidos</span><span style="color:#39ADB5;">().</span><span style="color:#6182B8;">compareTo</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">p2</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">getApellidos</span><span style="color:#39ADB5;">()))</span></span>
<span class="line"><span style="color:#39ADB5;">          </span><span style="color:#90A4AE;font-style:italic;">// Si queremos hacerlo descendente, ponemos .sorted((e2,e1) -&gt; ......</span></span>
<span class="line"><span style="color:#39ADB5;">          </span><span style="color:#90A4AE;font-style:italic;">//.sorted((e2, e1) -&gt; e1.getValue().getApellidos().compareTo(e2.getValue().getApellidos()))</span></span>
<span class="line"><span style="color:#90A4AE;">          </span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">collect</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">Collectors</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">toList</span><span style="color:#39ADB5;">());</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container info"><p class="custom-container-title">Encadenar métodos</p><p>Al final, el uso de API Stream nos permite en una misma sentencia, buscar los elementos que queramos, ordenarlos y generar una subcolección con los resultados.</p><p>Es lo más parecido que vamos a encontrar a una consulta SQL para los datos de una colección cualquiera.</p><p>Aunque su sintaxis no es muy clara, si aprendemos a usarla correctamente, podremos realizar operaciones instantáneas, sin lugar a bugs, con muy poco código.</p></div>`,113);function m(g,b){const l=a("DownloadPDF-component"),e=a("DocumentCover-component");return r(),c("div",null,[n(l),n(e,{titulo:"3.6 Anexo II - ArrayList hoja de referencia de los alumnos"}),B,d,D,E,A(`
\`\`\`puml
class Persona {
  - String nombre
  - String apellidos
  - int edad
  - double altura
  - int peso
  - String genero
  + Persona(String nombre, String apellidos, int edad, double altura, int peso, String genero)
  + String getNombre()
  + void setNombre(String nombre)
  + String getApellidos()
  + void setApellidos(String nombre)
  + int getEdad()
  + void setEdad(int edad)
  + double getAltura()
  + void setAltura(double altura)
  + int getPeso()
  + void setPeso(int peso)
  + String getGenero()
  + void setGenero(String genero)
}
\`\`\`
`),u])}const h=t(i,[["render",m],["__file","arraylist_annex.html.vue"]]);export{h as default};
