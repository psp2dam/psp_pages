import{_ as e,o as a,c as i,f as o}from"./app-92b2a0d8.js";const s={},r=o('<h1 id="tema-6-tecnicas-de-programacion-segura" tabindex="-1">Tema 6. Técnicas de programación segura</h1><p>El término criptografía es un derivado de la palabra griega <em>kryptos</em> que significa oculto y <em>grafos</em> que significa escritura. El objetivo de la criptografía es ocultar el significado de un mensaje mediante el cifrado o codificación del mensaje.</p><p>De todas las técnicas de programación segura, nosotros vamos a estudiar en este tema</p><ul><li>Las funciones de resumen (Hash)</li><li>El <strong>cifrado simétrico</strong> o de clave oculta</li><li>El <strong>cifrado asimétrico</strong> o de clave privada</li></ul><p>También estudiaremos cómo usar canales seguros de comunicación para nuestras aplicaciones, mediante el uso de sockets seguros empleando SSL/TLS.</p><p>Además, veremos una herramienta de seguridad que incorpora Java, las políticas de seguridad.</p><h2 id="objetivos" tabindex="-1">Objetivos</h2><p>Objetivos de esta unidad:</p><ul><li>Identificar principios y prácticas de programación segura.</li><li>Analizar técnicas y prácticas criptográficas.</li><li>Definir políticas de seguridad.</li><li>Emplear algoritmos criptográficos.</li><li>Utilizar sockets seguros para la transmisión de información.</li><li>Estudiar el funcionamiento de TLS/SSL sobre el protocolo TCP</li><li>Conocer herramientas de uso genérico en la criptografía</li></ul>',9),c=[r];function t(n,l){return a(),i("div",null,c)}const u=e(s,[["render",t],["__file","index.html.vue"]]);export{u as default};
